max(dat.lp$Date.Observed)
range(dat.lp$Date.Observed)
mean(dat.lp$Date.Observed,na.rm=T)
#Now make my Yday
dat.lp$yday <- lubridate::yday(dat.lp$Date.Observed)
summary(dat.lp)
#only looking at trees that showed leaf present in the first 200 days of the year
dat.lp <- dat.lp [dat.lp$yday >= 60 &dat.lp$yday<=152,]
#aggregating quercus.lf so it shows me the date of first leaf present for  every plant number and species
leaves.present <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.lp, FUN=min, na.rm=T)
summary(leaves.present)
head(leaves.present)
leaves.present$Date <- as.Date(paste0("2024-", leaves.present$yday), format="%Y-%j")
#Graphing
png(file.path(path.figs,"All_First_Leaf_Present_dens_highlight.png"), height=4, width=6, units="in", res=320)
ggplot(data=leaves.present) +
facet_grid(Collection~ .) + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Mean Day of First Leaves Present", x="Date", fill="Year")
dev.off()
###########
###########
#Getting a graph of leaves present intensity
###########
###########
dat.lpi <- dat.all[dat.all$leaf.present.observed=="Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.present.intensity", "Date", "Collection")]
summary(dat.lpi)
dat.lpi <- dat.lpi[!is.na(dat.lpi$PlantNumber),]
summary(dat.lpi)
#Checking to make sure date ranges are correct
min(dat.lpi$Date.Observed)
max(dat.lpi$Date.Observed)
mean(dat.lpi$Date.Observed)
range(dat.lpi$Date.Observed)
#Setting my yday
dat.lpi$yday <- lubridate::yday(dat.lpi$Date.Observed)
summary(dat.lpi)
#removing "0 and NA's
dat.lpi <- aggregate(yday ~ PlantNumber + Species + Year + Collection + leaf.present.intensity + Date.Observed , dat=dat.lpi, FUN=min, NA.rm=T)
summary(dat.lpi)
head(dat.lpi)
#filtering out 0%
dat.lpi <- dat.lpi %>% filter( leaf.present.intensity != "0%")
dat.lpi$yday <- lubridate::yday(dat.lpi$Date.Observed)
#Getting a graph of flower present intensity
###########
###########
dat.fpi <- dat.spring[dat.spring$flower.open.observed=="Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "flower.open.intensity", "Date", "Collection")]
summary(dat.fpi)
dat.fpi <- dat.fpi[!is.na(dat.fpi$PlantNumber),]
summary(dat.fpi)
#Checking to make sure date ranges are correct
min(dat.fpi$Date.Observed)
max(dat.fpi$Date.Observed)
mean(dat.fpi$Date.Observed)
range(dat.fpi$Date.Observed)
#Setting my yday
dat.fpi$yday <- lubridate::yday(dat.fpi$Date.Observed)
summary(dat.fpi)
#removing "0 and NA's
dat.fpi <- aggregate(yday ~ PlantNumber + Species + Year + Collection + flower.open.intensity + Date.Observed , dat=dat.fpi, FUN=min, NA.rm=T)
summary(dat.fpi)
head(dat.fpi)
dat.fpi$yday <- lubridate::yday(dat.fpi$Date.Observed)
summary(dat.fpi)
##thereas a weird value of "Select an option, removing this and coming back later to fix it
unique(dat.fpi$flower.open.intensity)
# Remove rows where flower.open.intensity is "Select an option" and 0%
dat.fpi <- dat.fpi %>% filter(!flower.open.intensity %in% c("Select an option", "0%"))
unique(dat.fpi$flower.open.intensity)
dat.fpi$Date <- as.Date(paste0("2024-", dat.fpi$yday), format="%Y-%j")
png(file.path(path.figs,"All_Flower_Open_Intensity.png"), height=4, width=6, units="in", res=320)+
ggplot(data=dat.fpi) +
geom_histogram(alpha=1.5, binwidth =10, aes(x=Date, fill=flower.open.intensity,))+
facet_grid(Year~Collection, scales="free")+
scale_x_date(date_labels="%b %d", date_breaks="3 month") +
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title="Open Flower Intensity", x="Day of Year",)
dev.off()
###########
###########
#Getting a graph of leaves increasing in size observations
###########
###########
dat.li <- dat.spring[dat.spring$leaf.increasing.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "leaf.increasing.observed", "Date", "Collection")]
dat.li <- dat.li[!is.na(dat.li$PlantNumber),]
summary(dat.li)
head(dat.li)
#finding the minimimum and maximum range and mean of the dates leaves increasing in size was observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.li$Date.Observed)
max(dat.li$Date.Observed)
range(dat.li$Date.Observed)
mean(dat.li$Date.Observed,na.rm=T)
#Now make my Yday
dat.li$yday <- lubridate::yday(dat.li$Date.Observed)
summary(dat.li)
#only looking at trees that showed leaves increasing in size in the first half of the year
dat.li <- dat.li [dat.li$yday<=152,]
summary(dat.li)
#aggregating quercus.lf so it shows me the date of first leaf increasing in size for  every plant number and species
leaves.increasing <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.li, FUN=min, na.rm=T)
summary(leaves.increasing)
head(leaves.increasing)
leaves.increasing$Date <- as.Date(paste0("2018-", leaves.increasing$yday), format="%Y-%j")
#Graphing
png(file.path(path.figs,"All_Leaf_Increasing_dens_highlight.png"), height=4, width=6, units="in", res=320)
ggplot(data=leaves.increasing) +
facet_grid(Collection~ ., scales = "free_y") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Mean Day of Leaves Increasing in Size Observed", x="Day of Year")
dev.off()
###########
###########
#Getting a graph of flower buds observations
##########
###########
dat.fb <- dat.spring[dat.spring$flower.buds.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "flower.buds.observed", "Date","Collection")]
dat.fb <- dat.fb[!is.na(dat.fb$PlantNumber),]
summary(dat.fb)
head(dat.fb)
#finding the minimimum and maximum range and mean of the dates flower buds were observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.fb$Date.Observed)
max(dat.fb$Date.Observed)
range(dat.fb$Date.Observed)
mean(dat.fb$Date.Observed,na.rm=T)
#Now make my Yday
dat.fb$yday <- lubridate::yday(dat.fb$Date.Observed)
summary(dat.fb)
min(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
#only looking at trees that showed flower buds in the first half of the year
#dat.fb <- dat.fb [dat.fb$yday<=180,]
summary(dat.fb)
#checking Ulmus flower dates
min(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
#aggregating quercus.lf so it shows me the date of first flower buds for  every plant number and species
flower.buds <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.fb, FUN=min, na.rm=T)
summary(flower.buds)
flower.buds$Date <- as.Date(paste0("2024-", flower.buds$yday), format="%Y-%j")
#Graphing
#png(file.path(path.figs,"All_Flowers_or_Flower_Buds_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
dat.fb <- dat.fb [dat.fb$yday<=152,]
#aggregating quercus.lf so it shows me the date of first flower buds for  every plant number and species
flower.buds <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.fb, FUN=min, na.rm=T)
summary(flower.buds)
head(flower.buds)
flower.buds$Date <- as.Date(paste0("2024-", flower.buds$yday), format="%Y-%j")
#Graphing
#png(file.path(path.figs,"All_Flowers_or_Flower_Buds_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs,"All_Flowers_or_Flower_Buds_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
###########
###########
#Getting a graph of flower buds observations
##########
###########
dat.fb <- dat.spring[dat.spring$flower.buds.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "flower.buds.observed", "Date","Collection")]
dat.fb <- dat.fb[!is.na(dat.fb$PlantNumber),]
summary(dat.fb)
head(dat.fb)
#finding the minimimum and maximum range and mean of the dates flower buds were observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.fb$Date.Observed)
max(dat.fb$Date.Observed)
range(dat.fb$Date.Observed)
mean(dat.fb$Date.Observed,na.rm=T)
#Now make my Yday
dat.fb$yday <- lubridate::yday(dat.fb$Date.Observed)
summary(dat.fb)
min(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
#only looking at trees that showed flower buds in the first half of the year
#dat.fb <- dat.fb [dat.fb$yday<=180,]
summary(dat.fb)
#checking Ulmus flower dates
min(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
dat.fb <- dat.fb [dat.fb$yday<=152,]
#aggregating quercus.lf so it shows me the date of first flower buds for  every plant number and species
flower.buds <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.fb, FUN=min, na.rm=T)
summary(flower.buds)
head(flower.buds)
flower.buds$Date <- as.Date(paste0("2024-", flower.buds$yday), format="%Y-%j")
#Graphing
png(file.path(path.figs,"All_Flowers_or_Flower_Buds_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs,"All_Flower_buds_dens_highlight.png"), height=4, width=6, units="in", res=320)
ggplot(data=flower.open) +
facet_grid(Collection~ ., scales = "free_y") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Mean Day of Open Flowers Observed", x="Day of Year")
###########
###########
#Getting a graph of flower buds observations
##########
###########
dat.fb <- dat.spring[dat.spring$flower.buds.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "flower.buds.observed", "Date","Collection")]
dat.fb <- dat.fb[!is.na(dat.fb$PlantNumber),]
summary(dat.fb)
head(dat.fb)
#finding the minimimum and maximum range and mean of the dates flower buds were observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.fb$Date.Observed)
max(dat.fb$Date.Observed)
range(dat.fb$Date.Observed)
mean(dat.fb$Date.Observed,na.rm=T)
#Now make my Yday
dat.fb$yday <- lubridate::yday(dat.fb$Date.Observed)
summary(dat.fb)
min(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
#only looking at trees that showed flower buds in the first half of the year
#dat.fb <- dat.fb [dat.fb$yday<=180,]
summary(dat.fb)
#checking Ulmus flower dates
min(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
dat.fb <- dat.fb [dat.fb$yday<=152,]
#aggregating quercus.lf so it shows me the date of first flower buds for  every plant number and species
flower.buds <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.fb, FUN=min, na.rm=T)
summary(flower.buds)
head(flower.buds)
flower.buds$Date <- as.Date(paste0("2024-", flower.buds$yday), format="%Y-%j")
#Graphing
png(file.path(path.figs,"All_Flowers_or_Flower_Buds_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs,"All_Flowers_and_buds_dens_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs,"All_Flowers_and_buds_dens_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs,"All_flow_buds_dens_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs, "All_flow_buds_dens_highlight.png"), height=4, width=6, units="in", res=320)
ggplot(data=flower.buds) +
facet_grid(Collection ~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
dev.off()
###########
###########
#Getting a graph of open flowers observations
###########
###########
dat.fo <- dat.spring[dat.spring$flower.open.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "flower.open.observed", "Date", "Collection")]
dat.fo <- dat.fo[!is.na(dat.fo$PlantNumber),]
summary(dat.fo)
head(dat.fo)
#finding the minimimum and maximum range and mean of the dates open flowers were observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.fo$Date.Observed)
max(dat.fo$Date.Observed)
range(dat.fo$Date.Observed)
mean(dat.fo$Date.Observed,na.rm=T)
#Now make my Yday
dat.fo$yday <- lubridate::yday(dat.fo$Date.Observed)
summary(dat.fo)
###########
###########
#Getting a graph of open flowers observations
###########
###########
dat.fo <- dat.spring[dat.spring$flower.open.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "flower.open.observed", "Date", "Collection")]
dat.fo <- dat.fo[!is.na(dat.fo$PlantNumber),]
summary(dat.fo)
head(dat.fo)
#finding the minimimum and maximum range and mean of the dates open flowers were observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.fo$Date.Observed)
max(dat.fo$Date.Observed)
range(dat.fo$Date.Observed)
mean(dat.fo$Date.Observed,na.rm=T)
#Now make my Yday
dat.fo$yday <- lubridate::yday(dat.fo$Date.Observed)
summary(dat.fo)
#only looking at trees that showed open flowers in the first half of the year
#dat.fo <- dat.fo [dat.fo$yday<=180,]
summary(dat.fo)
dat.fo <- dat.fo [dat.fo$yday<=152,]
#aggregating quercus.lf so it shows me the date of open flowers for  every plant number and species
flower.open <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.fo, FUN=min, na.rm=T)
summary(flower.open)
head(flower.open)
flower.open$Date <- as.Date(paste0("2018-", flower.open$yday), format="%Y-%j")
#Graphing
png(file.path(path.figs,"All_Flowers_Open_Highlight.png"), height=4, width=6, units="in", res=320)
ggplot(data=flower.open) +
facet_grid(Collection~ ., scales = "free_y") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Mean Day of Open Flowers Observed", x="Day of Year")
dev.off()
dat.lb23i <- dat.23[dat.23$leaf.breaking.buds.observed=="Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed","leaf.present.observed", "Collection", "leaf.breaking.buds.intensity", "leaf.present.intensity", "leaf.color.intensity" )]
dat.lb24i <- dat.24[dat.24$leaf.breaking.buds.observed=="Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed","leaf.present.observed", "Collection", "leaf.breaking.buds.intensity", "leaf.present.intensity", "leaf.color.intensity" )]
dat.lb24i <- dat.lb24i[!is.na(dat.lb24i$PlantNumber),]
summary(dat.lb24i)
dat.lp24i <- dat.24[dat.24$leaf.present.observed=="Yes",c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed","leaf.present.observed", "Collection", "leaf.breaking.buds.intensity", "leaf.present.intensity", "leaf.color.intensity" )]
dat.lp24i <- dat.lp24i[!is.na(dat.lp24i$PlantNumber),]
summary(dat.lp24i)
dat.lc24i <- dat.24[dat.24$leaf.color.observed=="Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed","leaf.present.observed", "Collection", "leaf.breaking.buds.intensity", "leaf.present.intensity", "leaf.color.intensity" )]
dat.lc24i <- dat.lc24i[!is.na(dat.lc24i$PlantNumber),]
summary(dat.lc24i)
dat.24z <- rbind(dat.lc24i,dat.lp24i,dat.lb24i)
summary(dat.24z)
dat.24z$yday <- lubridate::yday(dat.24z$Date.Observed)
summary(dat.24z)
#doesn't work exactly
dat.24z$pheno = with(dat.24z, ifelse(dat.24z$leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| dat.24z$leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color Observed",
ifelse(dat.24z$leaf.present.intensity %in% c("50-74%", "75-94%", ">95%") & dat.24z$leaf.breaking.buds.observed=="Yes", "Leaves Present Observed",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes", "Leaf Breaking Buds Observed", "Leaves Present Observed"))))
#sort of works
dat.24z$pheno = with(dat.24z, ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed!="Yes", "Leaf Breaking Buds Observed",
ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed=="Yes", "Leaves Present Observed",
ifelse(leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color Observed", "Leaves Present Observed"))))
dat.24z$pheno = with(dat.24z, ifelse(dat.24z$leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| dat.24z$leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color",
ifelse(dat.24z$leaf.present.observed== "Yes" & dat.24z$leaf.breaking.buds.observed=="Yes", "Leaves Present ",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes" & dat.24z$leaf.present.observed!= "Yes","Leaf Breaking Buds ",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes" | dat.24z$leaf.color.observed=="Yes","Leaf Breaking Buds", "Leaves Present")))))
p<-ggplot(dat.24z) +
facet_wrap(Collection~.)+
geom_bar(alpha=0.5,aes(x=yday, fill=pheno,))+ ylim(-50,325) +
theme_bw()+
labs(title="Leaf Phenopases", x="Day of Year",)+
coord_polar(start = 200)+
transition_states(yday, transition_length = 30, state_length =30)+
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, #exclude_layer = c(2, 3),
falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps=7.5)
dat.24z <- rbind(dat.lp24i,dat.lb24i)
summary(dat.24z)
dat.24z$yday <- lubridate::yday(dat.24z$Date.Observed)
summary(dat.24z)
#doesn't work exactly
dat.24z$pheno = with(dat.24z, ifelse(dat.24z$leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| dat.24z$leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color Observed",
ifelse(dat.24z$leaf.present.intensity %in% c("50-74%", "75-94%", ">95%") & dat.24z$leaf.breaking.buds.observed=="Yes", "Leaves Present Observed",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes", "Leaf Breaking Buds Observed", "Leaves Present Observed"))))
#sort of works
dat.24z$pheno = with(dat.24z, ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed!="Yes", "Leaf Breaking Buds Observed",
ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed=="Yes", "Leaves Present Observed",
ifelse(leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color Observed", "Leaves Present Observed"))))
dat.24z$pheno = with(dat.24z, ifelse(dat.24z$leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| dat.24z$leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color",
ifelse(dat.24z$leaf.present.observed== "Yes" & dat.24z$leaf.breaking.buds.observed=="Yes", "Leaves Present ",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes" & dat.24z$leaf.present.observed!= "Yes","Leaf Breaking Buds ",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes" | dat.24z$leaf.color.observed=="Yes","Leaf Breaking Buds", "Leaves Present")))))
p<-ggplot(dat.24z) +
facet_wrap(Collection~.)+
geom_bar(alpha=0.5,aes(x=yday, fill=pheno,))+ ylim(-50,325) +
theme_bw()+
labs(title="Leaf Phenopases", x="Day of Year",)+
coord_polar(start = 200)+
transition_states(yday, transition_length = 30, state_length =30)+
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, #exclude_layer = c(2, 3),
falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps=7.5)
#sort of works
dat.24z$pheno = with(dat.24z, ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed!="Yes", "Leaf Breaking Buds Observed",
ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed=="Yes", "Leaves Present Observed",
)))
#View follow animate with free  y scale
p<-ggplot(dat.24z) +
facet_wrap(~Collection , scales = "free_y")+
geom_bar(alpha=0.5,aes(x=yday, fill=pheno,))+ ylim(-50,325) +
theme_bw()+
labs(title="Leaf Phenopases", x="Day of Year",)+
#coord_polar(start = 200)+
transition_states(yday, transition_length = 30, state_length =30)+
ease_aes(x = 'sine-out', y = 'sine-out') +
view_follow()+
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, #exclude_layer = c(2, 3),
falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps=7.5)
dat.24z <- rbind(dat.lp24i,dat.lb24i)
summary(dat.24z)
dat.24z$yday <- lubridate::yday(dat.24z$Date.Observed)
summary(dat.24z)
#sort of works
dat.24z$pheno = with(dat.24z, ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed!="Yes", "Leaf Breaking Buds Observed",
ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed=="Yes", "Leaves Present Observed")))
# Filter out leaf color observed data
dat.lb24 <- dat.24[dat.24$leaf.breaking.buds.observed == "Yes" & dat.24$leaf.color.observed != "Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed", "leaf.present.observed", "Collection")]
dat.lb24 <- dat.lb24[!is.na(dat.lb24$PlantNumber),]
summary(dat.lb24)
dat.lp24 <- dat.24[dat.24$leaf.present.observed == "Yes" & dat.24$leaf.color.observed != "Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed", "leaf.present.observed", "Collection")]
dat.lp24 <- dat.lp24[!is.na(dat.lp24$PlantNumber),]
summary(dat.lp24)
dat.24lam <- rbind(dat.lp24, dat.lb24)
summary(dat.24lam)
dat.24lam$yday <- lubridate::yday(dat.24lam$Date.Observed)
summary(dat.24lam)
dat.24y <- rbind(dat.lp24, dat.lb24)
summary(dat.24y)
dat.24y$yday <- lubridate::yday(dat.24y$Date.Observed)
summary(dat.24y)
dat.24y$pheno <- with(dat.24y, ifelse(dat.24y$leaf.present.observed == "Yes" & dat.24y$leaf.breaking.buds.observed == "Yes", "Leaves Present Observed",
ifelse(dat.24y$leaf.breaking.buds.observed == "Yes", "Leaf Breaking Buds Observed", "Leaves Present Observed")))
# Large pole dark
p <- ggplot(dat.24y) +
geom_bar(alpha = 1, aes(x = yday, fill = pheno)) +
ylim(-100, 325) +
theme_dark() +
labs(title = "Leaf Phenophases", x = "Day of Year") +
coord_polar(start = 200) +
transition_states(yday, transition_length = 30, state_length = 30) +
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps = 8)
# Small pole light - facet by collections
p <- ggplot(dat.24y) +
facet_wrap(Collection ~ .) +
geom_bar(alpha = 1, aes(x = yday, fill = pheno)) +
ylim(-50, 200) +
theme_bw() +
labs(title = "Leaf Phenophases", x = "Day of Year") +
coord_polar(start = 200) +
transition_states(yday, transition_length = 30, state_length = 30) +
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps = 8)

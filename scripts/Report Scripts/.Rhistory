dat.fb <- dat.spring[dat.spring$flower.buds.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "flower.buds.observed", "Date","Collection")]
dat.fb <- dat.fb[!is.na(dat.fb$PlantNumber),]
summary(dat.fb)
head(dat.fb)
#finding the minimimum and maximum range and mean of the dates flower buds were observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.fb$Date.Observed)
max(dat.fb$Date.Observed)
range(dat.fb$Date.Observed)
mean(dat.fb$Date.Observed,na.rm=T)
#Now make my Yday
dat.fb$yday <- lubridate::yday(dat.fb$Date.Observed)
summary(dat.fb)
min(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
#only looking at trees that showed flower buds in the first half of the year
#dat.fb <- dat.fb [dat.fb$yday<=180,]
summary(dat.fb)
#checking Ulmus flower dates
min(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
#aggregating quercus.lf so it shows me the date of first flower buds for  every plant number and species
flower.buds <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.fb, FUN=min, na.rm=T)
summary(flower.buds)
flower.buds$Date <- as.Date(paste0("2024-", flower.buds$yday), format="%Y-%j")
#Graphing
#png(file.path(path.figs,"All_Flowers_or_Flower_Buds_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
dat.fb <- dat.fb [dat.fb$yday<=152,]
#aggregating quercus.lf so it shows me the date of first flower buds for  every plant number and species
flower.buds <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.fb, FUN=min, na.rm=T)
summary(flower.buds)
head(flower.buds)
flower.buds$Date <- as.Date(paste0("2024-", flower.buds$yday), format="%Y-%j")
#Graphing
#png(file.path(path.figs,"All_Flowers_or_Flower_Buds_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs,"All_Flowers_or_Flower_Buds_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
###########
###########
#Getting a graph of flower buds observations
##########
###########
dat.fb <- dat.spring[dat.spring$flower.buds.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "flower.buds.observed", "Date","Collection")]
dat.fb <- dat.fb[!is.na(dat.fb$PlantNumber),]
summary(dat.fb)
head(dat.fb)
#finding the minimimum and maximum range and mean of the dates flower buds were observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.fb$Date.Observed)
max(dat.fb$Date.Observed)
range(dat.fb$Date.Observed)
mean(dat.fb$Date.Observed,na.rm=T)
#Now make my Yday
dat.fb$yday <- lubridate::yday(dat.fb$Date.Observed)
summary(dat.fb)
min(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
#only looking at trees that showed flower buds in the first half of the year
#dat.fb <- dat.fb [dat.fb$yday<=180,]
summary(dat.fb)
#checking Ulmus flower dates
min(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
dat.fb <- dat.fb [dat.fb$yday<=152,]
#aggregating quercus.lf so it shows me the date of first flower buds for  every plant number and species
flower.buds <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.fb, FUN=min, na.rm=T)
summary(flower.buds)
head(flower.buds)
flower.buds$Date <- as.Date(paste0("2024-", flower.buds$yday), format="%Y-%j")
#Graphing
png(file.path(path.figs,"All_Flowers_or_Flower_Buds_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs,"All_Flower_buds_dens_highlight.png"), height=4, width=6, units="in", res=320)
ggplot(data=flower.open) +
facet_grid(Collection~ ., scales = "free_y") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Mean Day of Open Flowers Observed", x="Day of Year")
###########
###########
#Getting a graph of flower buds observations
##########
###########
dat.fb <- dat.spring[dat.spring$flower.buds.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "flower.buds.observed", "Date","Collection")]
dat.fb <- dat.fb[!is.na(dat.fb$PlantNumber),]
summary(dat.fb)
head(dat.fb)
#finding the minimimum and maximum range and mean of the dates flower buds were observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.fb$Date.Observed)
max(dat.fb$Date.Observed)
range(dat.fb$Date.Observed)
mean(dat.fb$Date.Observed,na.rm=T)
#Now make my Yday
dat.fb$yday <- lubridate::yday(dat.fb$Date.Observed)
summary(dat.fb)
min(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Year == 2023], na.rm = TRUE)
#only looking at trees that showed flower buds in the first half of the year
#dat.fb <- dat.fb [dat.fb$yday<=180,]
summary(dat.fb)
#checking Ulmus flower dates
min(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
max(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
range(dat.fb$Date.Observed[dat.fb$Collection == "Ulmus"], na.rm = TRUE)
dat.fb <- dat.fb [dat.fb$yday<=152,]
#aggregating quercus.lf so it shows me the date of first flower buds for  every plant number and species
flower.buds <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.fb, FUN=min, na.rm=T)
summary(flower.buds)
head(flower.buds)
flower.buds$Date <- as.Date(paste0("2024-", flower.buds$yday), format="%Y-%j")
#Graphing
png(file.path(path.figs,"All_Flowers_or_Flower_Buds_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2023"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2023"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs,"All_Flowers_and_buds_dens_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs,"All_Flowers_and_buds_dens_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs,"All_flow_buds_dens_highlight.png"), height=4, width=6, units="in", res=320)+
ggplot(data=flower.buds) +
facet_grid(Collection~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
#Graphing
png(file.path(path.figs, "All_flow_buds_dens_highlight.png"), height=4, width=6, units="in", res=320)
ggplot(data=flower.buds) +
facet_grid(Collection ~ ., scales="free") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Average Day of Flower Buds or Flowers Observed", x="Day of Year")
dev.off()
###########
###########
#Getting a graph of open flowers observations
###########
###########
dat.fo <- dat.spring[dat.spring$flower.open.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "flower.open.observed", "Date", "Collection")]
dat.fo <- dat.fo[!is.na(dat.fo$PlantNumber),]
summary(dat.fo)
head(dat.fo)
#finding the minimimum and maximum range and mean of the dates open flowers were observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.fo$Date.Observed)
max(dat.fo$Date.Observed)
range(dat.fo$Date.Observed)
mean(dat.fo$Date.Observed,na.rm=T)
#Now make my Yday
dat.fo$yday <- lubridate::yday(dat.fo$Date.Observed)
summary(dat.fo)
###########
###########
#Getting a graph of open flowers observations
###########
###########
dat.fo <- dat.spring[dat.spring$flower.open.observed=="Yes", c("Date.Observed", "Species", "PlantNumber", "Year", "flower.open.observed", "Date", "Collection")]
dat.fo <- dat.fo[!is.na(dat.fo$PlantNumber),]
summary(dat.fo)
head(dat.fo)
#finding the minimimum and maximum range and mean of the dates open flowers were observed on our trees.
#Note the na.rm=T which is removing N/A values
min(dat.fo$Date.Observed)
max(dat.fo$Date.Observed)
range(dat.fo$Date.Observed)
mean(dat.fo$Date.Observed,na.rm=T)
#Now make my Yday
dat.fo$yday <- lubridate::yday(dat.fo$Date.Observed)
summary(dat.fo)
#only looking at trees that showed open flowers in the first half of the year
#dat.fo <- dat.fo [dat.fo$yday<=180,]
summary(dat.fo)
dat.fo <- dat.fo [dat.fo$yday<=152,]
#aggregating quercus.lf so it shows me the date of open flowers for  every plant number and species
flower.open <- aggregate(yday ~ PlantNumber + Species + Year + Collection , data=dat.fo, FUN=min, na.rm=T)
summary(flower.open)
head(flower.open)
flower.open$Date <- as.Date(paste0("2018-", flower.open$yday), format="%Y-%j")
#Graphing
png(file.path(path.figs,"All_Flowers_Open_Highlight.png"), height=4, width=6, units="in", res=320)
ggplot(data=flower.open) +
facet_grid(Collection~ ., scales = "free_y") + # This is the code that will stack everything
geom_density(alpha=0.25, aes(x=Date, fill=as.factor(Year), color=as.factor(Year))) +
scale_x_date(date_labels="%b %d", date_breaks="1 month") +  # Format x-axis as month and date with a 1 month break
scale_fill_manual(name="Year", values=c("2024"="red", "others"="gray"), guide=guide_legend(override.aes=list(fill=c("red")))) +
scale_color_manual(name="Year", values=c("2024"="red", "others"="gray")) +
theme_bw() +
labs(title="Mean Day of Open Flowers Observed", x="Day of Year")
dev.off()
dat.lb23i <- dat.23[dat.23$leaf.breaking.buds.observed=="Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed","leaf.present.observed", "Collection", "leaf.breaking.buds.intensity", "leaf.present.intensity", "leaf.color.intensity" )]
dat.lb24i <- dat.24[dat.24$leaf.breaking.buds.observed=="Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed","leaf.present.observed", "Collection", "leaf.breaking.buds.intensity", "leaf.present.intensity", "leaf.color.intensity" )]
dat.lb24i <- dat.lb24i[!is.na(dat.lb24i$PlantNumber),]
summary(dat.lb24i)
dat.lp24i <- dat.24[dat.24$leaf.present.observed=="Yes",c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed","leaf.present.observed", "Collection", "leaf.breaking.buds.intensity", "leaf.present.intensity", "leaf.color.intensity" )]
dat.lp24i <- dat.lp24i[!is.na(dat.lp24i$PlantNumber),]
summary(dat.lp24i)
dat.lc24i <- dat.24[dat.24$leaf.color.observed=="Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed","leaf.present.observed", "Collection", "leaf.breaking.buds.intensity", "leaf.present.intensity", "leaf.color.intensity" )]
dat.lc24i <- dat.lc24i[!is.na(dat.lc24i$PlantNumber),]
summary(dat.lc24i)
dat.24z <- rbind(dat.lc24i,dat.lp24i,dat.lb24i)
summary(dat.24z)
dat.24z$yday <- lubridate::yday(dat.24z$Date.Observed)
summary(dat.24z)
#doesn't work exactly
dat.24z$pheno = with(dat.24z, ifelse(dat.24z$leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| dat.24z$leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color Observed",
ifelse(dat.24z$leaf.present.intensity %in% c("50-74%", "75-94%", ">95%") & dat.24z$leaf.breaking.buds.observed=="Yes", "Leaves Present Observed",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes", "Leaf Breaking Buds Observed", "Leaves Present Observed"))))
#sort of works
dat.24z$pheno = with(dat.24z, ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed!="Yes", "Leaf Breaking Buds Observed",
ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed=="Yes", "Leaves Present Observed",
ifelse(leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color Observed", "Leaves Present Observed"))))
dat.24z$pheno = with(dat.24z, ifelse(dat.24z$leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| dat.24z$leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color",
ifelse(dat.24z$leaf.present.observed== "Yes" & dat.24z$leaf.breaking.buds.observed=="Yes", "Leaves Present ",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes" & dat.24z$leaf.present.observed!= "Yes","Leaf Breaking Buds ",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes" | dat.24z$leaf.color.observed=="Yes","Leaf Breaking Buds", "Leaves Present")))))
p<-ggplot(dat.24z) +
facet_wrap(Collection~.)+
geom_bar(alpha=0.5,aes(x=yday, fill=pheno,))+ ylim(-50,325) +
theme_bw()+
labs(title="Leaf Phenopases", x="Day of Year",)+
coord_polar(start = 200)+
transition_states(yday, transition_length = 30, state_length =30)+
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, #exclude_layer = c(2, 3),
falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps=7.5)
dat.24z <- rbind(dat.lp24i,dat.lb24i)
summary(dat.24z)
dat.24z$yday <- lubridate::yday(dat.24z$Date.Observed)
summary(dat.24z)
#doesn't work exactly
dat.24z$pheno = with(dat.24z, ifelse(dat.24z$leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| dat.24z$leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color Observed",
ifelse(dat.24z$leaf.present.intensity %in% c("50-74%", "75-94%", ">95%") & dat.24z$leaf.breaking.buds.observed=="Yes", "Leaves Present Observed",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes", "Leaf Breaking Buds Observed", "Leaves Present Observed"))))
#sort of works
dat.24z$pheno = with(dat.24z, ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed!="Yes", "Leaf Breaking Buds Observed",
ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed=="Yes", "Leaves Present Observed",
ifelse(leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color Observed", "Leaves Present Observed"))))
dat.24z$pheno = with(dat.24z, ifelse(dat.24z$leaf.color.intensity %in% c("50-74%", "75-94%",">95%")| dat.24z$leaf.present.intensity %in% c("0%", "<5%", "5-24%","25-49%") , "Leaf Color",
ifelse(dat.24z$leaf.present.observed== "Yes" & dat.24z$leaf.breaking.buds.observed=="Yes", "Leaves Present ",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes" & dat.24z$leaf.present.observed!= "Yes","Leaf Breaking Buds ",
ifelse(dat.24z$leaf.breaking.buds.observed=="Yes" | dat.24z$leaf.color.observed=="Yes","Leaf Breaking Buds", "Leaves Present")))))
p<-ggplot(dat.24z) +
facet_wrap(Collection~.)+
geom_bar(alpha=0.5,aes(x=yday, fill=pheno,))+ ylim(-50,325) +
theme_bw()+
labs(title="Leaf Phenopases", x="Day of Year",)+
coord_polar(start = 200)+
transition_states(yday, transition_length = 30, state_length =30)+
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, #exclude_layer = c(2, 3),
falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps=7.5)
#sort of works
dat.24z$pheno = with(dat.24z, ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed!="Yes", "Leaf Breaking Buds Observed",
ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed=="Yes", "Leaves Present Observed",
)))
#View follow animate with free  y scale
p<-ggplot(dat.24z) +
facet_wrap(~Collection , scales = "free_y")+
geom_bar(alpha=0.5,aes(x=yday, fill=pheno,))+ ylim(-50,325) +
theme_bw()+
labs(title="Leaf Phenopases", x="Day of Year",)+
#coord_polar(start = 200)+
transition_states(yday, transition_length = 30, state_length =30)+
ease_aes(x = 'sine-out', y = 'sine-out') +
view_follow()+
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, #exclude_layer = c(2, 3),
falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps=7.5)
dat.24z <- rbind(dat.lp24i,dat.lb24i)
summary(dat.24z)
dat.24z$yday <- lubridate::yday(dat.24z$Date.Observed)
summary(dat.24z)
#sort of works
dat.24z$pheno = with(dat.24z, ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed!="Yes", "Leaf Breaking Buds Observed",
ifelse(leaf.breaking.buds.observed=="Yes" & leaf.present.observed=="Yes", "Leaves Present Observed")))
# Filter out leaf color observed data
dat.lb24 <- dat.24[dat.24$leaf.breaking.buds.observed == "Yes" & dat.24$leaf.color.observed != "Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed", "leaf.present.observed", "Collection")]
dat.lb24 <- dat.lb24[!is.na(dat.lb24$PlantNumber),]
summary(dat.lb24)
dat.lp24 <- dat.24[dat.24$leaf.present.observed == "Yes" & dat.24$leaf.color.observed != "Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed", "leaf.present.observed", "Collection")]
dat.lp24 <- dat.lp24[!is.na(dat.lp24$PlantNumber),]
summary(dat.lp24)
dat.24lam <- rbind(dat.lp24, dat.lb24)
summary(dat.24lam)
dat.24lam$yday <- lubridate::yday(dat.24lam$Date.Observed)
summary(dat.24lam)
dat.24y <- rbind(dat.lp24, dat.lb24)
summary(dat.24y)
dat.24y$yday <- lubridate::yday(dat.24y$Date.Observed)
summary(dat.24y)
dat.24y$pheno <- with(dat.24y, ifelse(dat.24y$leaf.present.observed == "Yes" & dat.24y$leaf.breaking.buds.observed == "Yes", "Leaves Present Observed",
ifelse(dat.24y$leaf.breaking.buds.observed == "Yes", "Leaf Breaking Buds Observed", "Leaves Present Observed")))
# Large pole dark
p <- ggplot(dat.24y) +
geom_bar(alpha = 1, aes(x = yday, fill = pheno)) +
ylim(-100, 325) +
theme_dark() +
labs(title = "Leaf Phenophases", x = "Day of Year") +
coord_polar(start = 200) +
transition_states(yday, transition_length = 30, state_length = 30) +
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps = 8)
# Small pole light - facet by collections
p <- ggplot(dat.24y) +
facet_wrap(Collection ~ .) +
geom_bar(alpha = 1, aes(x = yday, fill = pheno)) +
ylim(-50, 200) +
theme_bw() +
labs(title = "Leaf Phenophases", x = "Day of Year") +
coord_polar(start = 200) +
transition_states(yday, transition_length = 30, state_length = 30) +
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps = 8)
# A new script with some combined collections analyses/graphs for the end of the year report
library(ggplot2)
library(readr)
library(lubridate)
library(tidyverse)
library(gganimate)
library(dplyr)
library(transformr)
path.google <- "~/Google Drive/My Drive" # Mac
path.dat <- file.path(path.google,"/LivingCollections_Phenology/Data_Observations")
#path.figs <- file.path(path.google, "LivingCollections_Phenology/Reports/2023_02_EndOfYear_Report/figures_2023_end")
# this is for google ->#
path.figs <- "~/Google Drive/My Drive/LivingCollections_Phenology/Reports/2024_01_Mid_Year_Report/figures_2024"
if(!dir.exists("../data")) dir.create("../data/")
if(!dir.exists("../figures/")) dir.create("../figures/")
dat.22 <- read_csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_All_2022_FINAL.csv"))
dat.21 <- read_csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_All_2021_FINAL.csv"))
dat.20<- read_csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_All_2020_FINAL.csv"))
dat.19 <- read.csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_All_2019_FINAL.csv"))
dat.18 <- read_csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_All_2018_FINAL.csv"))
#reading in 2023 data
acer23<- read_csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_Acer_2023_FINAL.csv"))
quercus23 <- read_csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_Quercus_2023_FINAL.csv"))
ulmus23 <- read_csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_Ulmus_2023_FINAL.csv"))
#reading in 2024 data
acer24<- read_csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_Acer_2024_Spring.csv"))
quercus24 <- read_csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_Quercus_2024_Spring.csv"))
ulmus24 <- read_csv(file.path(path.dat,"LivingCollectionPhenology_ObservationData_Ulmus_2024_Spring.csv"))
##binding
dat.23<- rbind(ulmus23, quercus23, acer23)
dat.24<- rbind(ulmus24, quercus24, acer24)
##one line to bind them all
dat.all <- rbind(dat.24,dat.23, dat.22, dat.21, dat.20, dat.19, dat.18)
#getting the correct date format
dat.all$yday <- lubridate::yday(dat.all$Date.Observed)
dat.all$Date <- as.Date(paste0("2018-", dat.all$yday), format="%Y-%j")
##werid 2027 value
summary(dat.all)
#removing the "Q.macrocarpa" collection because that is not necessary for the end of year pheology report
dat.all <- dat.all[!(dat.all$Collection %in% c("Q. macrocarpa", "Tilia")), ]
#Checking what is present in the collection column to see if it's been removed
unique(dat.all$Collection)
#Setting a spring only data frame because we did not make observations in spring 2020
dat.spring <- dat.all[dat.all$Year != "2020", ]
#further excluding all elm observations for 2021 since we did not observe phenology that spring
dat.spring <- dat.spring[!(dat.spring$Collection == "Ulmus" & dat.spring$Year == "2021"), ]
##checking unique values of the Year and Collection column in dat.spring
unique(dat.spring$Year)
unique(dat.spring$Collection)
##somewhere we have a year listed as 2027..come back to this.
dat.huh <- dat.all[dat.all$Year == "2027", ]
head(dat.huh)
# Filter out leaf color observed data
dat.lb24 <- dat.24[dat.24$leaf.breaking.buds.observed == "Yes" & dat.24$leaf.color.observed != "Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed", "leaf.present.observed", "Collection")]
dat.lb24 <- dat.lb24[!is.na(dat.lb24$PlantNumber),]
summary(dat.lb24)
dat.lp24 <- dat.24[dat.24$leaf.present.observed == "Yes" & dat.24$leaf.color.observed != "Yes", c("Date.Observed", "Species", "Year", "PlantNumber", "leaf.color.observed", "leaf.breaking.buds.observed", "leaf.present.observed", "Collection")]
dat.lp24 <- dat.lp24[!is.na(dat.lp24$PlantNumber),]
summary(dat.lp24)
dat.24lam <- rbind(dat.lp24, dat.lb24)
summary(dat.24lam)
dat.24lam$yday <- lubridate::yday(dat.24lam$Date.Observed)
summary(dat.24lam)
dat.24y <- rbind(dat.lp24, dat.lb24)
summary(dat.24y)
dat.24y$yday <- lubridate::yday(dat.24y$Date.Observed)
summary(dat.24y)
dat.24y$pheno <- with(dat.24y, ifelse(dat.24y$leaf.present.observed == "Yes" & dat.24y$leaf.breaking.buds.observed == "Yes", "Leaves Present Observed",
ifelse(dat.24y$leaf.breaking.buds.observed == "Yes", "Leaf Breaking Buds Observed", "Leaves Present Observed")))
# Large pole dark
p <- ggplot(dat.24y) +
geom_bar(alpha = 1, aes(x = yday, fill = pheno)) +
ylim(-100, 325) +
theme_dark() +
labs(title = "Leaf Phenophases", x = "Day of Year") +
coord_polar(start = 200) +
transition_states(yday, transition_length = 30, state_length = 30) +
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps = 8)
# No pole dark
p <- ggplot(dat.24y) +
geom_bar(alpha = 1, aes(x = yday, fill = pheno)) +
ylim(0, 325) +
theme_dark() +
labs(title = "Leaf Phenophases", x = "Day of Year") +
coord_polar(start = 200) +
transition_states(yday, transition_length = 30, state_length = 30) +
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps = 8)
# Small pole light
p <- ggplot(dat.24y) +
geom_bar(alpha = 1, aes(x = yday, fill = pheno)) +
ylim(-50, 325) +
theme_bw() +
labs(title = "Leaf Phenophases", x = "Day of Year") +
coord_polar(start = 200) +
transition_states(yday, transition_length = 30, state_length = 30) +
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps = 8)
# Small pole light - facet by collections
p <- ggplot(dat.24y) +
facet_wrap(Collection ~ .) +
geom_bar(alpha = 1, aes(x = yday, fill = pheno)) +
ylim(-50, 200) +
theme_bw() +
labs(title = "Leaf Phenophases", x = "Day of Year") +
coord_polar(start = 200) +
transition_states(yday, transition_length = 30, state_length = 30) +
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps = 8)
# Small pole light - facet by collections
p <- ggplot(dat.24y) +
facet_grid(Collection ~ .) +
geom_bar(alpha = 1, aes(x = yday, fill = pheno)) +
ylim(-50, 200) +
theme_bw() +
labs(title = "Leaf Phenophases", x = "Day of Year") +
coord_polar(start = 200) +
transition_states(yday, transition_length = 30, state_length = 30) +
ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_mark(1, size = 2, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
animate(p, fps = 8)

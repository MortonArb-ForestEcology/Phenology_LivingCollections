geom_line() +
geom_vline(xintercept = 2002, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2002 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln02, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2002, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2002 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln15, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2015, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2015 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#--- read CSV data in
flossdvi<-read.csv("~/Google Drive/My Drive/Reidy_research/Hansen exploration/handsen_floss10.csv")
head(flossdvi)
# Rename the "GD202_8" value to "GD2002_8"
flossdvi$Label[flossdvi$Label == "GD202_8"] <- "GD2002_8"
# Check the updated data
head(flossdvi)
unique(flossdvi$Label)
ggplot(flossdvi, aes(x=Year, y= NDVI, color=as.factor(Label))) +
geom_line() +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x = as.factor(Year), y = NDVI)) + # Year as factor for boxplots
geom_boxplot() +
labs(title = "NDVI Distribution Across Years", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x=Year, y= NDVI, color=as.factor(Label))) +
geom_smooth() +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x=Year, y= NDVI)) +
geom_line() +
facet_grid(Label ~ .) +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Fln17 <-flossdvi[flossdvi$Label == "GD2017_11", c("Label", "NDVI","Year")]
head(Fln17)
ggplot(Fln17, aes(x=Year, y=NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +  # Add vertical line
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Fln15 <-flossdvi[flossdvi$Label == "GD2015_4", c("Label", "NDVI","Year")]
head(Fln15)
ggplot(Fln15, aes(x=Year, y=NDVI)) +
geom_line() +
geom_vline(xintercept = 2015, color = "red", linetype = "dashed") +  # Add vertical line
labs(title = "NDVI series for 2015 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Fln02 <-flossdvi[flossdvi$Label == "GD2002_8", c("Label", "NDVI","Year")]
head(Fln02)
ggplot(Fln02, aes(x=Year, y=NDVI)) +
geom_line() +
geom_vline(xintercept = 2002, color = "red", linetype = "dashed") +  # Add vertical line
labs(title = "NDVI series for 2002 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
mean_ndvi_by_year <- flossdvi %>%
filter(!Year %in% years_to_exclude) %>%
group_by(Year) %>%
summarize(Mean_NDVI = mean(NDVI, na.rm = TRUE))
mean_ndvi_by_year <- flossdvi %>%
group_by(Year) %>%
summarize(Mean_NDVI = mean(NDVI, na.rm = TRUE))
mean_ndvi_by_year$Year <- as.numeric(mean_ndvi_by_year$Year)
flossdvi$Year <- as.numeric(flossdvi$Year)
ggplot(Fln15, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2015, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2015 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate mean NDVI by year for all labels, excluding specific years
years_to_exclude <- c(2002, 2015, 2016, 2017, 2018, 2019, 2020, 2022)
mean_ndvi_by_year <- flossdvi %>%
filter(!Year %in% years_to_exclude) %>%
group_by(Year) %>%
summarize(Mean_NDVI = mean(NDVI, na.rm = TRUE))
mean_ndvi_by_year <- flossdvi %>%
group_by(Year) %>%
summarize(Mean_NDVI = mean(NDVI, na.rm = TRUE))
mean_ndvi_by_year$Year <- as.numeric(mean_ndvi_by_year$Year)
flossdvi$Year <- as.numeric(flossdvi$Year)
ggplot(Fln15, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2015, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2015 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate mean NDVI by year for all labels, excluding specific years
years_to_exclude <- c(2002, 2015, 2016, 2017, 2018, 2019, 2020, 2022)
mean_ndvi_by_year <- flossdvi %>%
filter(!Year %in% years_to_exclude) %>%
group_by(Year) %>%
summarize(Mean_NDVI = mean(NDVI, na.rm = TRUE))
mean_ndvi_by_year <- flossdvi %>%
group_by(Year) %>%
summarize(Mean_NDVI = mean(NDVI, na.rm = TRUE))
mean_ndvi_by_year$Year <- as.numeric(mean_ndvi_by_year$Year)
flossdvi$Year <- as.numeric(flossdvi$Year)
ggplot(Fln15, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2015, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2015 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln02, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2002, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2002 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln17, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln17, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +
geom_smooth(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2, method = "lm") + # Use linear model
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln17, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +
geom_smooth(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2, method = "lm") + # Use linear model
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln17, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln15, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2015, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2015 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln02, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2002, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2002 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
head
head(flossdvi)
# Rename the "GD202_8" value to "GD2002_8"
flossdvi$Label[flossdvi$Label == "GD202_8"] <- "GD2002_8"
# Check the updated data
head(flossdvi)
unique(flossdvi$Label)
ggplot(flossdvi, aes(x=Year, y= NDVI, color=as.factor(Label))) +
geom_line() +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x = as.factor(Year), y = NDVI)) + # Year as factor for boxplots
geom_boxplot() +
labs(title = "NDVI Distribution Across Years", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x=Year, y= NDVI, color=as.factor(Label))) +
geom_smooth() +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x=Year, y= NDVI)) +
geom_line() +
facet_grid(Label ~ .) +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Fln17 <-flossdvi[flossdvi$Label == "GD2017_11", c("Label", "NDVI","Year")]
head(Fln17)
ggplot(Fln17, aes(x=Year, y=NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +  # Add vertical line
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Fln15 <-flossdvi[flossdvi$Label == "GD2015_4", c("Label", "NDVI","Year")]
head(Fln15)
ggplot(Fln15, aes(x=Year, y=NDVI)) +
geom_line() +
geom_vline(xintercept = 2015, color = "red", linetype = "dashed") +  # Add vertical line
labs(title = "NDVI series for 2015 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Fln02 <-flossdvi[flossdvi$Label == "GD2002_8", c("Label", "NDVI","Year")]
head(Fln02)
ggplot(Fln02, aes(x=Year, y=NDVI)) +
geom_line() +
geom_vline(xintercept = 2002, color = "red", linetype = "dashed") +  # Add vertical line
labs(title = "NDVI series for 2002 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate mean NDVI by year for all labels, excluding specific years
years_to_exclude <- c(2002, 2015, 2016, 2017, 2018, 2019, 2020, 2022)
mean_ndvi_by_year <- flossdvi %>%
filter(!Year %in% years_to_exclude) %>%
group_by(Year) %>%
summarize(Mean_NDVI = mean(NDVI, na.rm = TRUE))
mean_ndvi_by_year <- flossdvi %>%
group_by(Year) %>%
summarize(Mean_NDVI = mean(NDVI, na.rm = TRUE))
mean_ndvi_by_year$Year <- as.numeric(mean_ndvi_by_year$Year)
flossdvi$Year <- as.numeric(flossdvi$Year)
ggplot(Fln17, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(googlesheets4)
library(ggplot2)
library(terra)
library(MODISTools)
library(dplyr)
library(sf)
library(jsonlite)
library(readr)
#----reading in data
floss.dat <- read_sheet("https://docs.google.com/spreadsheets/d/1glBSZbN2uHsR0PzRiEAV0W1CDGh8kGb_-gQmxT2sVpw/edit?gid=1258618079#gid=1258618079")
head(floss.dat)
#Making the year correct
floss.dat$Year <- as.numeric(floss.dat$Year)
floss.dat$Year <- ifelse(floss.dat$Year < 10,
paste0("200", floss.dat$Year),  # Add '200' for single-digit years
paste0("20", floss.dat$Year))   # Add '20' for two-digit years
head(floss.dat)
#View(floss.dat)
#----basic stats on size
# Basic summary statistics
summary(floss.dat)
# Mean, standard deviation, variance
mean(floss.dat$area_sqm)
sd(floss.dat$area_sqm)
var(floss.dat$area_sqm)
range(floss.dat$area_sqm)
#----Getting the  10 polygons with the highest square meters
floss10.dat <- floss.dat[order(floss.dat$area_sqm, decreasing = TRUE), ][1:10, ]
head(floss10.dat)
ggplot(floss.dat, aes(x = area_sqm)) +
geom_histogram(bins = 30, fill = "blue", color = "black") +
labs(title = "Distribution of Area (sq m)",
x = "Area (sq m)",
y = "Frequency") +
theme_minimal()
# Convert Year to a factor for better boxplot grouping
floss.dat$Year <- as.factor(floss.dat$Year)
floss.dat$area_sqm <- as.numeric(floss.dat$area_sqm)
# Create the box plot
ggplot(floss.dat, aes(x = Year, y = area_sqm)) +
geom_boxplot() +
labs(title = "Box Plot of Area by Year", x = "Year", y = "Area (sqm)") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#--- read CSV data in
flossdvi<-read.csv("~/Google Drive/My Drive/Reidy_research/Hans_harm_2.csv")
#--- read CSV data in
flossdvi<-read.csv("~/Google Drive/My Drive/Reidy_research/hans_harm_2.csv")
#--- read CSV data in
flossdvi<-read.csv("~/Google Drive/My Drive/Reidy_research/Hansen exploration/hans_harm_2.csv")
head(flossdvi)
# Rename the "GD202_8" value to "GD2002_8"
flossdvi$Label[flossdvi$Label == "GD202_8"] <- "GD2002_8"
# Check the updated data
head(flossdvi)
unique(flossdvi$Label)
ggplot(flossdvi, aes(x=Year, y= NDVI, color=as.factor(Label))) +
geom_line() +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x = as.factor(Year), y = NDVI)) + # Year as factor for boxplots
geom_boxplot() +
labs(title = "NDVI Distribution Across Years", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x=Year, y= NDVI, color=as.factor(Label))) +
geom_smooth() +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x=Year, y= NDVI)) +
geom_line() +
facet_grid(Label ~ .) +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Fln17 <-flossdvi[flossdvi$Label == "GD2017_11", c("Label", "NDVI","Year")]
head(Fln17)
ggplot(Fln17, aes(x=Year, y=NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +  # Add vertical line
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Check the updated data
head(flossdvi)
View(flossdvi)
#--- read CSV data in
flossdvi<-read.csv("~/Google Drive/My Drive/Reidy_research/Hansen exploration/hansen_modis.csv")
#--- read CSV data in
flossdvi<-read.csv("~/Google Drive/My Drive/Reidy_research/Hansen exploration/hansen_modis.csv")
head(flossdvi)
# Rename the "GD202_8" value to "GD2002_8"
flossdvi$Label[flossdvi$Label == "GD202_8"] <- "GD2002_8"
# Check the updated data
head(flossdvi)
unique(flossdvi$Label)
ggplot(flossdvi, aes(x=Year, y= NDVI, color=as.factor(Label))) +
geom_line() +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x = as.factor(Year), y = NDVI)) + # Year as factor for boxplots
geom_boxplot() +
labs(title = "NDVI Distribution Across Years", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x=Year, y= NDVI, color=as.factor(Label))) +
geom_smooth() +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(flossdvi, aes(x=Year, y= NDVI)) +
geom_line() +
facet_grid(Label ~ .) +
labs(title = "Mean NDVI by year", x = "Year", y = "NDVI") +
theme_minimal() + # Apply a clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Fln17 <-flossdvi[flossdvi$Label == "GD2017_11", c("Label", "NDVI","Year")]
head(Fln17)
ggplot(Fln17, aes(x=Year, y=NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +  # Add vertical line
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Fln15 <-flossdvi[flossdvi$Label == "GD2015_4", c("Label", "NDVI","Year")]
head(Fln15)
ggplot(Fln15, aes(x=Year, y=NDVI)) +
geom_line() +
geom_vline(xintercept = 2015, color = "red", linetype = "dashed") +  # Add vertical line
labs(title = "NDVI series for 2015 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Fln02 <-flossdvi[flossdvi$Label == "GD2002_8", c("Label", "NDVI","Year")]
head(Fln02)
ggplot(Fln02, aes(x=Year, y=NDVI)) +
geom_line() +
geom_vline(xintercept = 2002, color = "red", linetype = "dashed") +  # Add vertical line
labs(title = "NDVI series for 2002 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Calculate mean NDVI by year for all labels, excluding specific years
years_to_exclude <- c(2002, 2015, 2016, 2017, 2018, 2019, 2020, 2022)
mean_ndvi_by_year <- flossdvi %>%
filter(!Year %in% years_to_exclude) %>%
group_by(Year) %>%
summarize(Mean_NDVI = mean(NDVI, na.rm = TRUE))
mean_ndvi_by_year <- flossdvi %>%
group_by(Year) %>%
summarize(Mean_NDVI = mean(NDVI, na.rm = TRUE))
mean_ndvi_by_year$Year <- as.numeric(mean_ndvi_by_year$Year)
flossdvi$Year <- as.numeric(flossdvi$Year)
ggplot(Fln17, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln17, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2017, color = "red", linetype = "dashed") +
geom_smooth(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2, method = "lm") + # Use linear model
labs(title = "NDVI series for 2017 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln15, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2015, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2015 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln15, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2015, color = "red", linetype = "dashed") +
geom_smooth(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2, method = "lm") + # Use linear model
labs(title = "NDVI series for 2015 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln02, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2002, color = "red", linetype = "dashed") +
geom_line(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2) +  # Changed to geom_line
labs(title = "NDVI series for 2002 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(Fln02, aes(x = Year, y = NDVI)) +
geom_line() +
geom_vline(xintercept = 2002, color = "red", linetype = "dashed") +
geom_smooth(data = mean_ndvi_by_year, aes(x = Year, y = Mean_NDVI), color = "blue", size = 1.2, method = "lm") + # Use linear model
labs(title = "NDVI series for 2002 disturbance year", x = "Year", y = "NDVI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ---------------------------------
# 0. Set up some general file paths
# ---------------------------------
library(ggplot2)
library(gghighlight)
library(dplyr)
path.google <- "~/Google Drive/My Drive" # Mac
path.dat <- file.path(path.google,"/LivingCollections_Phenology/Data_Observations")
path.figs <- "~/Google Drive/My Drive/LivingCollections_Phenology/Reports/2024_02_End_Of_Year_Report/figures_2024_end"
if(!dir.exists("../data")) dir.create("../data/")
if(!dir.exists("../figures/")) dir.create("../figures/")
dir.met <- "../data_raw/meteorology"
dir.create(dir.met, recursive=T, showWarnings = F)
# ---------------------------------
# 1. NOAA COOP Station data
# Use FedData Package to download station data and put it here
# ---------------------------------
ID="USC00115097"
vars.want <- c("TMAX", "TMIN", "PRCP", "SNOW", "SNWD")
path.ghcn=c("../data_raw/meteorology/GHCN_extracted/")
dir.raw="../data_raw/meteorology/GHCN_raw/"
source("phenology weather/met_download_GHCN.R");
source("phenology weather/met_gapfill.R")
download.ghcn(ID=ID, vars.in=vars.want, path.save=path.ghcn, dir.raw=dir.raw, gapfill=T, method="https")
# -------------------------------------
# Calculating some cumulative statistics
# -------------------------------------
# Create a function to calculate values we're interested in for prediction
calc.indices <- function(dat){
# Assumes upper case column names of: TMAX, TMIN, PRCP, YDAY
# For chilling days, only start after the solstice (June 20th)
dat$TMEAN <- apply(dat[,c("TMAX", "TMIN")], 1, mean)
dat$GDD0 <- ifelse(dat$TMEAN>0, dat$TMEAN-0, 0)
dat$GDD5 <- ifelse(dat$TMEAN>5, dat$TMEAN-5, 0)
dat$CDD0 <- ifelse(dat$YDAY>172 & dat$TMEAN<0, 0-dat$TMEAN, 0)
dat$CDD2 <- ifelse(dat$YDAY>172 & dat$TMEAN< -2, -2-dat$TMEAN, 0)
dat$DaysNoRain <- NA
dat[, c("GDD0.cum", "GDD5.cum", "CDD0.cum", "CDD2.cum", "PRCP.cum")] <- cumsum(dat[, c("GDD0", "GDD5", "CDD0", "CDD2", "PRCP")])
dat[, c("NORAIN.cum")] <- cumsum(ifelse(dat[,"PRCP"]>0, 1, 0))
# Calculating days since rain just in case
dat$DaysNoRain[1] <- ifelse(dat$PRCP[1]>0, 0, 1)
for(i in 2:nrow(dat)){
dat$DaysNoRain[i] <- ifelse(dat$PRCP[i]>0, dat$DaysNoRain[i-1]+1, 0)
}
return(dat)
}
# For the "historical" GHCN data
dat.ghcn <- read.csv(file.path(path.ghcn, "USC00115097_latest.csv"))
dat.ghcn$DATE <- as.Date(dat.ghcn$DATE)
summary(dat.ghcn)
# ---------------------------------
# 0. Set up some general file paths
# ---------------------------------
library(ggplot2)
library(gghighlight)
library(dplyr)
path.google <- "~/Google Drive/My Drive" # Mac
path.dat <- file.path(path.google,"/LivingCollections_Phenology/Data_Observations")
path.figs <- "~/Google Drive/My Drive/LivingCollections_Phenology/Reports/2024_02_End_Of_Year_Report/figures_2024_end"
if(!dir.exists("../data")) dir.create("../data/")
if(!dir.exists("../figures/")) dir.create("../figures/")
dir.met <- "../data_raw/meteorology"
dir.create(dir.met, recursive=T, showWarnings = F)
# ---------------------------------
# 1. NOAA COOP Station data
# Use FedData Package to download station data and put it here
# ---------------------------------
ID="USC00115097"
vars.want <- c("TMAX", "TMIN", "PRCP", "SNOW", "SNWD")
path.ghcn=c("../data_raw/meteorology/GHCN_extracted/")
dir.raw="../data_raw/meteorology/GHCN_raw/"
source("phenology weather/met_download_GHCN.R");
